"use strict";!function(){var t=function(){var t=this;t.getOptions=function(){t.container=document.querySelector(".shopList"),t.content=document.querySelector(".shopListMain__content"),t.template=document.querySelector("#shopListItem").innerHTML,t.openFooterBtn=document.querySelector(".shopListMain__open"),t.footer=document.querySelector(".shopListFooter"),t.input=document.querySelector(".shopListFooter__input"),t.form=document.querySelector(".shopListFooter__form"),t.submitBtn=document.querySelector(".shopListFooter__btn.shopListFooter__btn_type_submit"),t.shopList=[]},t.loadData=function(){var e=localStorage.getItem("shopList");e&&(t.shopList=JSON.parse(e))},t.setupListener=function(){t.openFooterBtn.addEventListener("click",t.openFooter),t.footer.addEventListener("click",t.closeFooter),t.input.addEventListener("keyup",t.handleKeyUp),t.form.addEventListener("submit",t.submit),t.submitBtn.addEventListener("click",t.handleFocus),t.container.addEventListener("click",t.toggleItemPanel)},t.toggleItemPanel=function(e){var n=e.target;if(n.classList.contains("shopListItem__content")){var o=n.id;o&&(t.shopList=t.shopList.map(function(t){return t.id==o&&(t.isOpen=!t.isOpen),t}),t.render())}},t.openFooter=function(e){e.preventDefault(),t.container.classList.add("shopList_state_add")},t.closeFooter=function(e){e.target===t.footer&&0===t.input.value.length&&t.container.classList.remove("shopList_state_add")},t.handleKeyUp=function(){var e=t.input.value,n=e.length,o=n>0?"add":"remove";t.container.classList[o]("shopList_state_valid")},t.handleFocus=function(e){e.preventDefault(),t.submit(),t.input.focus()},t.submit=function(e){e&&e.preventDefault();var n=t.input.value,o=n.length;if(0===o)return!1;var i=t.shopList.length,s=0===i?0:i+1,r=!1;t.shopList.push({id:s,title:n,isOpen:r}),t.reset(),t.render(),t.updateLocalStorage()},t.reset=function(){t.form.reset()},t.render=function(){var e=document.createElement("ul");e.classList.add("shopListMain__list"),t.shopList.forEach(function(n){var o=document.createElement("li");o.classList.add("shopListMain__item"),o.innerHTML=t.template,o.querySelector(".shopListItem__content").id=n.id,o.querySelector(".shopListItem__content").innerHTML=n.title,n.isOpen&&o.querySelector(".shopListItem").classList.add("shopListItem_state_open"),e.appendChild(o)}),t.content.innerHTML="",t.content.appendChild(e)},t.updateLocalStorage=function(){var e=JSON.stringify(t.shopList);localStorage.setItem("shopList",e)},t.init=function(){t.getOptions(),t.setupListener(),t.loadData(),t.render()}},e=new t;window.addEventListener("load",function(){return e.init()}),document.addEventListener("deviceready",function(){return e.init()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4ubWluLmpzIiwic2hvcExpc3Qvc2hvcExpc3QuanMiXSwibmFtZXMiOlsiU2hvcExpc3QiLCJzZWxmIiwidGhpcyIsImdldE9wdGlvbnMiLCJjb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwidGVtcGxhdGUiLCJpbm5lckhUTUwiLCJvcGVuRm9vdGVyQnRuIiwiZm9vdGVyIiwiaW5wdXQiLCJmb3JtIiwic3VibWl0QnRuIiwic2hvcExpc3QiLCJsb2FkRGF0YSIsImxvY2FsRGF0YSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJzZXR1cExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9wZW5Gb290ZXIiLCJjbG9zZUZvb3RlciIsImhhbmRsZUtleVVwIiwic3VibWl0IiwiaGFuZGxlRm9jdXMiLCJ0b2dnbGVJdGVtUGFuZWwiLCJldmVudCIsInRhcmdldCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiaWQiLCJtYXAiLCJzaG9wSXRlbSIsImlzT3BlbiIsInJlbmRlciIsInByZXZlbnREZWZhdWx0IiwiYWRkIiwidmFsdWUiLCJsZW5ndGgiLCJyZW1vdmUiLCJtZXRob2QiLCJmb2N1cyIsInNob3BMaXN0TGVuZ3RoIiwicHVzaCIsInRpdGxlIiwicmVzZXQiLCJ1cGRhdGVMb2NhbFN0b3JhZ2UiLCJjb250ZW50TGlzdCIsImNyZWF0ZUVsZW1lbnQiLCJmb3JFYWNoIiwiaXRlbSIsImVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsImRhdGEiLCJzdHJpbmdpZnkiLCJzZXRJdGVtIiwiaW5pdCIsIndpbmRvdyJdLCJtYXBwaW5ncyI6IkFBQUEsY0NBQSxXQUtBLEdBQUFBLEdBQUEsV0FDQSxHQUFBQyxHQUFBQyxJQUtBRCxHQUFBRSxXQUFBLFdBQ0FGLEVBQUFHLFVBQUFDLFNBQUFDLGNBQUEsYUFDQUwsRUFBQU0sUUFBQUYsU0FBQUMsY0FBQSwwQkFDQUwsRUFBQU8sU0FBQUgsU0FB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QUUsVUFBQSxHQUVBUixFQUFBTSxRQUFBaUQsWUFBQUwsSUFNQWxELEVBQUFpRCxtQkFBQSxXQUNBLEdBQUFPLEdBQUFyQyxLQUFBc0MsVUFBQXpELEVBQUFjLFNBRUFHLGNBQUF5QyxRQUFBLFdBQUFGLElBTUF4RCxFQUFBMkQsS0FBQSxXQUNBM0QsRUFBQUUsYUFDQUYsRUFBQXFCLGdCQUNBckIsRUFBQWUsV0FDQWYsRUFBQXFDLFdBSUF2QixFQUFBLEdBQUFmLEVBRUE2RCxRQUFBdEMsaUJBQUEsT0FBQSxXQUFBLE1BQUFSLEdBQUE2QyxTQUNBdkQsU0FBQWtCLGlCQUFBLGNBQUEsV0FBQSxNQUFBUixHQUFBNkMiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbihmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBTaG9wTGlzdCBjbGFzcy5cbiAgICAgKiBAY2xhc3NcbiAgICAgKi9cbiAgICB2YXIgU2hvcExpc3QgPSBmdW5jdGlvbiBTaG9wTGlzdCgpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHZXQgb3B0aW9ucyBmb3IgbW9kdWxlXG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLmdldE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzZWxmLmNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG9wTGlzdCcpO1xuICAgICAgICAgICAgc2VsZi5jb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNob3BMaXN0TWFpbl9fY29udGVudCcpO1xuICAgICAgICAgICAgc2VsZi50ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzaG9wTGlzdEl0ZW0nKS5pbm5lckhUTUw7XG4gICAgICAgICAgICBzZWxmLm9wZW5Gb290ZXJCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2hvcExpc3RNYWluX19vcGVuJyk7XG4gICAgICAgICAgICBzZWxmLmZvb3RlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG9wTGlzdEZvb3RlcicpO1xuICAgICAgICAgICAgc2VsZi5pbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG9wTGlzdEZvb3Rlcl9faW5wdXQnKTtcbiAgICAgICAgICAgIHNlbGYuZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG9wTGlzdEZvb3Rlcl9fZm9ybScpO1xuICAgICAgICAgICAgc2VsZi5zdWJtaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2hvcExpc3RGb290ZXJfX2J0bi5zaG9wTGlzdEZvb3Rlcl9fYnRuX3R5cGVfc3VibWl0Jyk7XG4gICAgICAgICAgICBzZWxmLnNob3BMaXN0ID0gW107XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENoZWNrIGlmIHRoZXJlIGRhdGEgaW4gbG9jYWwgc3RvcmFnZSBhbmQgbG9hZCBpdFxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5sb2FkRGF0YSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBsb2NhbERhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2hvcExpc3QnKTtcblxuICAgICAgICAgICAgaWYgKGxvY2FsRGF0YSkge1xuXG4gICAgICAgICAgICAgICAgc2VsZi5zaG9wTGlzdCA9IEpTT04ucGFyc2UobG9jYWxEYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQWRkIGV2ZW50cyBsaXN0ZW5lcnNcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuc2V0dXBMaXN0ZW5lciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHNlbGYub3BlbkZvb3RlckJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbGYub3BlbkZvb3Rlcik7XG4gICAgICAgICAgICBzZWxmLmZvb3Rlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbGYuY2xvc2VGb290ZXIpO1xuICAgICAgICAgICAgc2VsZi5pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIHNlbGYuaGFuZGxlS2V5VXApO1xuICAgICAgICAgICAgc2VsZi5mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHNlbGYuc3VibWl0KTtcbiAgICAgICAgICAgIHNlbGYuc3VibWl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2VsZi5oYW5kbGVGb2N1cyk7XG4gICAgICAgICAgICBzZWxmLmNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbGYudG9nZ2xlSXRlbVBhbmVsKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogVG9nZ2xlIHNob3AgaXRlbSBwYW5lbFxuICAgICAgICAgKiBAcGFyYW0gZXZlbnRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYudG9nZ2xlSXRlbVBhbmVsID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuXG4gICAgICAgICAgICBpZiAodGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnc2hvcExpc3RJdGVtX19jb250ZW50JykpIHtcblxuICAgICAgICAgICAgICAgIHZhciBpZCA9IHRhcmdldC5pZDtcblxuICAgICAgICAgICAgICAgIGlmIChpZCkge1xuXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuc2hvcExpc3QgPSBzZWxmLnNob3BMaXN0Lm1hcChmdW5jdGlvbiAoc2hvcEl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaG9wSXRlbS5pZCA9PSBpZCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvcEl0ZW0uaXNPcGVuID0gIXNob3BJdGVtLmlzT3BlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNob3BJdGVtO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICBzZWxmLnJlbmRlcigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogU2hvdyBmb290ZXIgd2l0aCBpbnB1dCBmaWVsZFxuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYub3BlbkZvb3RlciA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgc2VsZi5jb250YWluZXIuY2xhc3NMaXN0LmFkZCgnc2hvcExpc3Rfc3RhdGVfYWRkJyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENsb3NlIGZvb3RlciBpZiBjbGljayBvdXRzaWRlIG9mIGZvb3RlciBpbnB1dFxuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuY2xvc2VGb290ZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQgPT09IHNlbGYuZm9vdGVyICYmIHNlbGYuaW5wdXQudmFsdWUubGVuZ3RoID09PSAwKSB7XG5cbiAgICAgICAgICAgICAgICBzZWxmLmNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCdzaG9wTGlzdF9zdGF0ZV9hZGQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQ2hlY2sgaWYgaW5wdXQgdmFsdWUgbGVuZ3RoID4gMCBhbmQgY2hhbmdlIGNvbnRhaW5lciBzdGF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5oYW5kbGVLZXlVcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHNlbGYuaW5wdXQudmFsdWU7XG4gICAgICAgICAgICB2YXIgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICAgICAgICAgICAgdmFyIG1ldGhvZCA9IGxlbmd0aCA+IDAgPyAnYWRkJyA6ICdyZW1vdmUnO1xuXG4gICAgICAgICAgICBzZWxmLmNvbnRhaW5lci5jbGFzc0xpc3RbbWV0aG9kXSgnc2hvcExpc3Rfc3RhdGVfdmFsaWQnKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogS2VlcCBpbnB1dCBmb2N1c1xuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuaGFuZGxlRm9jdXMgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgIHNlbGYuc3VibWl0KCk7XG4gICAgICAgICAgICBzZWxmLmlucHV0LmZvY3VzKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEhhbmRsZSBmb3JtIHN1Ym1pc3Npb24uIEFkZCBuZXcgaXRlbSB0byBzaG9wIGxpc3RcbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLnN1Ym1pdCA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50KSB7XG5cbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBzZWxmLmlucHV0LnZhbHVlO1xuICAgICAgICAgICAgdmFyIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDtcblxuICAgICAgICAgICAgaWYgKGxlbmd0aCA9PT0gMCkge1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgc2hvcExpc3RMZW5ndGggPSBzZWxmLnNob3BMaXN0Lmxlbmd0aDtcbiAgICAgICAgICAgIHZhciBpZCA9IHNob3BMaXN0TGVuZ3RoID09PSAwID8gMCA6IHNob3BMaXN0TGVuZ3RoICsgMTtcbiAgICAgICAgICAgIHZhciBpc09wZW4gPSBmYWxzZTtcblxuICAgICAgICAgICAgc2VsZi5zaG9wTGlzdC5wdXNoKHtcbiAgICAgICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHZhbHVlLFxuICAgICAgICAgICAgICAgIGlzT3BlbjogaXNPcGVuXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgc2VsZi5yZXNldCgpO1xuICAgICAgICAgICAgc2VsZi5yZW5kZXIoKTtcbiAgICAgICAgICAgIHNlbGYudXBkYXRlTG9jYWxTdG9yYWdlKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlc2V0IGZvcm1cbiAgICAgICAgICovXG4gICAgICAgIHNlbGYucmVzZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzZWxmLmZvcm0ucmVzZXQoKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogUmVuZGVyIHNob3AgbGlzdFxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgY29udGVudExpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuXG4gICAgICAgICAgICBjb250ZW50TGlzdC5jbGFzc0xpc3QuYWRkKCdzaG9wTGlzdE1haW5fX2xpc3QnKTtcblxuICAgICAgICAgICAgc2VsZi5zaG9wTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuXG4gICAgICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdzaG9wTGlzdE1haW5fX2l0ZW0nKTtcbiAgICAgICAgICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IHNlbGYudGVtcGxhdGU7XG5cbiAgICAgICAgICAgICAgICBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG9wTGlzdEl0ZW1fX2NvbnRlbnQnKS5pZCA9IGl0ZW0uaWQ7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuc2hvcExpc3RJdGVtX19jb250ZW50JykuaW5uZXJIVE1MID0gaXRlbS50aXRsZTtcblxuICAgICAgICAgICAgICAgIGlmIChpdGVtLmlzT3Blbikge1xuXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQucXVlcnlTZWxlY3RvcignLnNob3BMaXN0SXRlbScpLmNsYXNzTGlzdC5hZGQoJ3Nob3BMaXN0SXRlbV9zdGF0ZV9vcGVuJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29udGVudExpc3QuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgc2VsZi5jb250ZW50LmlubmVySFRNTCA9ICcnO1xuXG4gICAgICAgICAgICBzZWxmLmNvbnRlbnQuYXBwZW5kQ2hpbGQoY29udGVudExpc3QpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBVcGRhdGUgbG9jYWwgc3RvcmFnZVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi51cGRhdGVMb2NhbFN0b3JhZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZGF0YSA9IEpTT04uc3RyaW5naWZ5KHNlbGYuc2hvcExpc3QpO1xuXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2hvcExpc3QnLCBkYXRhKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogSW5pdCBtb2R1bGVcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHNlbGYuZ2V0T3B0aW9ucygpO1xuICAgICAgICAgICAgc2VsZi5zZXR1cExpc3RlbmVyKCk7XG4gICAgICAgICAgICBzZWxmLmxvYWREYXRhKCk7XG4gICAgICAgICAgICBzZWxmLnJlbmRlcigpO1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgICB2YXIgc2hvcExpc3QgPSBuZXcgU2hvcExpc3QoKTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gc2hvcExpc3QuaW5pdCgpO1xuICAgIH0pO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZXJlYWR5JywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gc2hvcExpc3QuaW5pdCgpO1xuICAgIH0pO1xufSkoKTsiLCIoKCkgPT4ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgU2hvcExpc3QgY2xhc3MuXG4gICAgICogQGNsYXNzXG4gICAgICovXG4gICAgY29uc3QgU2hvcExpc3QgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCBvcHRpb25zIGZvciBtb2R1bGVcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuZ2V0T3B0aW9ucyA9ICgpID0+IHtcbiAgICAgICAgICAgIHNlbGYuY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNob3BMaXN0Jyk7XG4gICAgICAgICAgICBzZWxmLmNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2hvcExpc3RNYWluX19jb250ZW50Jyk7XG4gICAgICAgICAgICBzZWxmLnRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Nob3BMaXN0SXRlbScpLmlubmVySFRNTDtcbiAgICAgICAgICAgIHNlbGYub3BlbkZvb3RlckJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG9wTGlzdE1haW5fX29wZW4nKTtcbiAgICAgICAgICAgIHNlbGYuZm9vdGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNob3BMaXN0Rm9vdGVyJyk7XG4gICAgICAgICAgICBzZWxmLmlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNob3BMaXN0Rm9vdGVyX19pbnB1dCcpO1xuICAgICAgICAgICAgc2VsZi5mb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNob3BMaXN0Rm9vdGVyX19mb3JtJyk7XG4gICAgICAgICAgICBzZWxmLnN1Ym1pdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG9wTGlzdEZvb3Rlcl9fYnRuLnNob3BMaXN0Rm9vdGVyX19idG5fdHlwZV9zdWJtaXQnKTtcbiAgICAgICAgICAgIHNlbGYuc2hvcExpc3QgPSBbXTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQ2hlY2sgaWYgdGhlcmUgZGF0YSBpbiBsb2NhbCBzdG9yYWdlIGFuZCBsb2FkIGl0XG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLmxvYWREYXRhID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zdCBsb2NhbERhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2hvcExpc3QnKTtcblxuICAgICAgICAgICAgaWYgKGxvY2FsRGF0YSkge1xuXG4gICAgICAgICAgICAgICAgc2VsZi5zaG9wTGlzdCA9IEpTT04ucGFyc2UobG9jYWxEYXRhKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBZGQgZXZlbnRzIGxpc3RlbmVyc1xuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5zZXR1cExpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgICAgICAgc2VsZi5vcGVuRm9vdGVyQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2VsZi5vcGVuRm9vdGVyKTtcbiAgICAgICAgICAgIHNlbGYuZm9vdGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2VsZi5jbG9zZUZvb3Rlcik7XG4gICAgICAgICAgICBzZWxmLmlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgc2VsZi5oYW5kbGVLZXlVcCk7XG4gICAgICAgICAgICBzZWxmLmZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0Jywgc2VsZi5zdWJtaXQpO1xuICAgICAgICAgICAgc2VsZi5zdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZWxmLmhhbmRsZUZvY3VzKTtcbiAgICAgICAgICAgIHNlbGYuY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2VsZi50b2dnbGVJdGVtUGFuZWwpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUb2dnbGUgc2hvcCBpdGVtIHBhbmVsXG4gICAgICAgICAqIEBwYXJhbSBldmVudFxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi50b2dnbGVJdGVtUGFuZWwgPSBldmVudCA9PiB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cbiAgICAgICAgICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzaG9wTGlzdEl0ZW1fX2NvbnRlbnQnKSkge1xuXG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSB0YXJnZXQuaWQ7XG5cbiAgICAgICAgICAgICAgICBpZiAoaWQpIHtcblxuICAgICAgICAgICAgICAgICAgICBzZWxmLnNob3BMaXN0ID0gc2VsZi5zaG9wTGlzdC5tYXAoc2hvcEl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNob3BJdGVtLmlkID09IGlkKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG9wSXRlbS5pc09wZW4gPSAhc2hvcEl0ZW0uaXNPcGVuO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzaG9wSXRlbTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgc2VsZi5yZW5kZXIoKTtcblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTaG93IGZvb3RlciB3aXRoIGlucHV0IGZpZWxkXG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5vcGVuRm9vdGVyID0gZXZlbnQgPT4ge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgc2VsZi5jb250YWluZXIuY2xhc3NMaXN0LmFkZCgnc2hvcExpc3Rfc3RhdGVfYWRkJyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENsb3NlIGZvb3RlciBpZiBjbGljayBvdXRzaWRlIG9mIGZvb3RlciBpbnB1dFxuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuY2xvc2VGb290ZXIgPSBldmVudCA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBzZWxmLmZvb3RlciAmJiBzZWxmLmlucHV0LnZhbHVlLmxlbmd0aCA9PT0gMCkge1xuXG4gICAgICAgICAgICAgICAgc2VsZi5jb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnc2hvcExpc3Rfc3RhdGVfYWRkJyk7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQ2hlY2sgaWYgaW5wdXQgdmFsdWUgbGVuZ3RoID4gMCBhbmQgY2hhbmdlIGNvbnRhaW5lciBzdGF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5oYW5kbGVLZXlVcCA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gc2VsZi5pbnB1dC52YWx1ZTtcbiAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IHZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgIGNvbnN0IG1ldGhvZCA9IGxlbmd0aCA+IDAgPyAnYWRkJyA6ICdyZW1vdmUnO1xuXG4gICAgICAgICAgICBzZWxmLmNvbnRhaW5lci5jbGFzc0xpc3RbbWV0aG9kXSgnc2hvcExpc3Rfc3RhdGVfdmFsaWQnKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogS2VlcCBpbnB1dCBmb2N1c1xuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuaGFuZGxlRm9jdXMgPSBldmVudCA9PiB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICBzZWxmLnN1Ym1pdCgpO1xuICAgICAgICAgICAgc2VsZi5pbnB1dC5mb2N1cygpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBIYW5kbGUgZm9ybSBzdWJtaXNzaW9uLiBBZGQgbmV3IGl0ZW0gdG8gc2hvcCBsaXN0XG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5zdWJtaXQgPSBldmVudCA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQpIHtcblxuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzZWxmLmlucHV0LnZhbHVlO1xuICAgICAgICAgICAgY29uc3QgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuXG4gICAgICAgICAgICBpZiAobGVuZ3RoID09PSAwKSB7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgc2hvcExpc3RMZW5ndGggPSBzZWxmLnNob3BMaXN0Lmxlbmd0aDtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gc2hvcExpc3RMZW5ndGggPT09IDAgPyAwIDogc2hvcExpc3RMZW5ndGggKyAxO1xuICAgICAgICAgICAgY29uc3QgaXNPcGVuID0gZmFsc2U7XG5cbiAgICAgICAgICAgIHNlbGYuc2hvcExpc3QucHVzaCh7XG4gICAgICAgICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgICAgICAgIHRpdGxlOiB2YWx1ZSxcbiAgICAgICAgICAgICAgICBpc09wZW46IGlzT3BlblxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHNlbGYucmVzZXQoKTtcbiAgICAgICAgICAgIHNlbGYucmVuZGVyKCk7XG4gICAgICAgICAgICBzZWxmLnVwZGF0ZUxvY2FsU3RvcmFnZSgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXNldCBmb3JtXG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLnJlc2V0ID0gKCkgPT4ge1xuICAgICAgICAgICAgc2VsZi5mb3JtLnJlc2V0KCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlbmRlciBzaG9wIGxpc3RcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYucmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zdCBjb250ZW50TGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG5cbiAgICAgICAgICAgIGNvbnRlbnRMaXN0LmNsYXNzTGlzdC5hZGQoJ3Nob3BMaXN0TWFpbl9fbGlzdCcpO1xuXG4gICAgICAgICAgICBzZWxmLnNob3BMaXN0LmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuXG4gICAgICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdzaG9wTGlzdE1haW5fX2l0ZW0nKTtcbiAgICAgICAgICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IHNlbGYudGVtcGxhdGU7XG5cbiAgICAgICAgICAgICAgICBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG9wTGlzdEl0ZW1fX2NvbnRlbnQnKS5pZCA9IGl0ZW0uaWQ7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuc2hvcExpc3RJdGVtX19jb250ZW50JykuaW5uZXJIVE1MID0gaXRlbS50aXRsZTtcblxuICAgICAgICAgICAgICAgIGlmIChpdGVtLmlzT3Blbikge1xuXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQucXVlcnlTZWxlY3RvcignLnNob3BMaXN0SXRlbScpLmNsYXNzTGlzdC5hZGQoJ3Nob3BMaXN0SXRlbV9zdGF0ZV9vcGVuJyk7XG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb250ZW50TGlzdC5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBzZWxmLmNvbnRlbnQuaW5uZXJIVE1MID0gJyc7XG5cbiAgICAgICAgICAgIHNlbGYuY29udGVudC5hcHBlbmRDaGlsZChjb250ZW50TGlzdCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFVwZGF0ZSBsb2NhbCBzdG9yYWdlXG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLnVwZGF0ZUxvY2FsU3RvcmFnZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04uc3RyaW5naWZ5KHNlbGYuc2hvcExpc3QpO1xuXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2hvcExpc3QnLCBkYXRhKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogSW5pdCBtb2R1bGVcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuaW5pdCA9ICgpID0+IHtcbiAgICAgICAgICAgIHNlbGYuZ2V0T3B0aW9ucygpO1xuICAgICAgICAgICAgc2VsZi5zZXR1cExpc3RlbmVyKCk7XG4gICAgICAgICAgICBzZWxmLmxvYWREYXRhKCk7XG4gICAgICAgICAgICBzZWxmLnJlbmRlcigpO1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgICBjb25zdCBzaG9wTGlzdCA9IG5ldyBTaG9wTGlzdCgpO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiBzaG9wTGlzdC5pbml0KCkpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZXJlYWR5JywgKCkgPT4gc2hvcExpc3QuaW5pdCgpKTtcbn0pKCk7XG4iXX0=
