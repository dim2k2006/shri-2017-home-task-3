"use strict";!function(){var t=function(){var t=this;t.getOptions=function(){t.container=document.querySelector(".shopList"),t.content=document.querySelector(".shopListMain__content"),t.template=document.querySelector("#shopListItem").innerHTML,t.openFooterBtn=document.querySelector(".shopListMain__open"),t.footer=document.querySelector(".shopListFooter"),t.input=document.querySelector(".shopListFooter__input"),t.hidden=document.querySelector(".shopListFooter__hidden"),t.form=document.querySelector(".shopListFooter__form"),t.submitBtn=document.querySelector(".shopListFooter__btn.shopListFooter__btn_type_submit"),t.shopList=[]},t.loadData=function(){var e=localStorage.getItem("shopList");e&&(t.shopList=JSON.parse(e))},t.setupListener=function(){t.openFooterBtn.addEventListener("click",t.openFooter),t.footer.addEventListener("click",t.closeFooter),t.input.addEventListener("keyup",t.handleKeyUp),t.form.addEventListener("submit",t.submit),t.submitBtn.addEventListener("click",t.handleFocus),t.container.addEventListener("click",t.routeClick)},t.routeClick=function(e){var n=e.target,i="";n.classList.contains("shopListItem__content")?i="toggleItemPanel":n.classList.contains("shopListItem__btn_type_complete")?i="complete":n.classList.contains("shopListItem__btn_type_edit")&&(i="edit"),i&&t[i](e)},t.toggleItemPanel=function(e){var n=e.target;if(n.classList.contains("shopListItem__content")){var i=n.getAttribute("data-id");i&&(t.shopList=t.shopList.map(function(t){return t.id==i&&(t.isOpen=!t.isOpen),t}),t.render())}},t.complete=function(e){var n=e.target,i=n.getAttribute("data-id");i&&(t.shopList=t.shopList.filter(function(t){return t.id!=i}),t.render(),t.updateLocalStorage())},t.edit=function(e){var n=e.target,i=n.getAttribute("data-id"),o=t.shopList.find(function(t){return t.id==i});i&&o&&(t.input.value=o.title,t.hidden.value=i,t.openFooter(e))},t.openFooter=function(e){e.preventDefault(),t.container.classList.add("shopList_state_add"),t.input.focus()},t.closeFooter=function(e){e.target===t.footer&&0===t.input.value.length&&t.container.classList.remove("shopList_state_add")},t.handleKeyUp=function(){var e=t.input.value,n=e.length,i=n>0?"add":"remove";t.container.classList[i]("shopList_state_valid")},t.handleFocus=function(e){e.preventDefault(),t.submit(),t.input.focus()},t.submit=function(e){e&&e.preventDefault();var n=t.input.value,i=t.hidden.value,o=n.length;if(0===o)return!1;var s=t.shopList.length,r=i?i:"0"===s?"0":""+(s+1),a=!1,c=t.shopList.find(function(t){return t.id==r});c?c.title=n:t.shopList.push({id:r,title:n,isOpen:a}),t.reset(),t.render(),t.updateLocalStorage()},t.reset=function(){t.form.reset(),t.hidden.value=""},t.render=function(){var e=document.createElement("ul");e.classList.add("shopListMain__list"),t.shopList.forEach(function(n){var i=document.createElement("li");i.classList.add("shopListMain__item"),i.innerHTML=t.template,i.querySelector(".shopListItem__content").setAttribute("data-id",n.id),i.querySelector(".shopListItem__content").innerHTML=n.title,i.querySelector(".shopListItem__btn_type_complete").setAttribute("data-id",n.id),i.querySelector(".shopListItem__btn_type_edit").setAttribute("data-id",n.id),n.isOpen&&i.querySelector(".shopListItem").classList.add("shopListItem_state_open"),e.appendChild(i)}),t.content.innerHTML="",t.content.appendChild(e)},t.updateLocalStorage=function(){var e=JSON.stringify(t.shopList);localStorage.setItem("shopList",e)},t.init=function(){t.getOptions(),t.setupListener(),t.loadData(),t.render()}},e=new t;window.addEventListener("load",function(){return e.init()}),document.addEventListener("deviceready",function(){return e.init()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
